import re


# 패턴 정의
pattern_map = {
    'KEB하나은행': ['하나[0-9]{3}'],
    '하나저축은행': ['하나저축\([0-9]{3}\)'],
    'KB국민카드': ['국민카드[0-9]{4}'],
    '네이버페이': ['네이버[0-9]{4}', 'N[a-z]{4}'],
    'NH인증': ['NH[0-9]{6}'],
    '당근페이': ['당근[0-9]{3}', '당근페이[0-9]{3}'],
    'KB증권': ['KB[0-9]{4}'],
    'IBK기업은행': ['IBK[0-9]{4}'],
    'SKT': ['SKT[0-9]{3}'],
    '경남은행': ['경남[0-9]{4}'],
    '신한은행': ['신한[0-9]{4}'],
    '서울페이': ['[0-9]{4}지역화폐'],
    '코인원': ['코인원[0-9]{3}'],
    '엘페이': ['LPAY[0-9]{4}'],
    '삼성증권': ['삼성[0-9]{3}'],
    '삼성페이': ['인증번호:[0-9]{4}'],
    '삼성카드': ['[0-9]{4}삼성'],
    '현대차증권': ['\d{3}현차증'],
    '우리은행': ['우리\d{4}'],
    '신한카드': ['\d{4}신한카드'],
    'LG유플러스': ['LGU\d{3}'],
    '전북은행': ['전북\d{4}'],
    '베트맨': ['베트맨\d{4}'],
    '신한금융투자': ['신한\d{3}'],
    '업비트': ['\d{3}업비트'],
    '빗썸': ['빗썸\d{3}'],
    'KB페이': ['KB페이\d{3}'],
    '페이팔': ['PP*\d{4}COD'],
    '코인샷': ['\d{4}코인샷'],
    '머니트리': ['[a-z]{3}머니트리'],
    '신협': ['신협_\d{4}'],
    '코빗': ['코빗\d{4}'],
    '티머니페이': ['티머니\d{3}'],
    '페이북': ['페이북\d{3}'],
    '한국사이버결제': ['KCP\d{4}'],
    '와이어바알리': ['WB\d{4}'],
    '대구은행': ['대구\d{4}'],
    '미래에셋증권': ['미래에셋\d{3}'],
    '토스': ['토스\d{3}'],
    '한국투자증권': ['\d{4}_한국투자'],
    '케이뱅크': ['\d{4}케이뱅크', 'K뱅[가-힣]{4}'],
    '세이퍼트': ['\d{4}세이퍼트'],
    '-': ['징검\d{4}'],
    'SSG페이': ['SSG ?[a-zA-Z0-9]{4}'],
    '광주은행': ['광주\d{4}'],
    '부산은행': ['부산 ?\d{4}', 'BNK\d{4}'],
    'SB': ['SB\d{4}'],
    'SBI저축은행': ['\[[가-힣]{4}\] SBI']
}
pattern_compiled = {
    key: [re.compile(v) for v in value] for key, value in pattern_map.items()
}


def find(name):
    """
    어떤 타입인지, 리턴 없으면 None
    :param transaction:
    :return:
    """
    for key, patterns in pattern_compiled.items():
        for pattern in patterns:
            if pattern.match(name):
                return key
    return None


if __name__ == '__main__':
    r = find('[삼양라면] SBI')
    print(r)